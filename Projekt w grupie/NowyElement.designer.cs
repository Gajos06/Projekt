#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Projekt_w_grupie
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BazaPytan")]
	public partial class NowyElementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertwyniki(wyniki instance);
    partial void Updatewyniki(wyniki instance);
    partial void Deletewyniki(wyniki instance);
    #endregion
		
		public NowyElementDataContext() : 
				base(global::Projekt_w_grupie.Properties.Settings.Default.BazaPytanConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NowyElementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NowyElementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NowyElementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NowyElementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<wyniki> wyniki
		{
			get
			{
				return this.GetTable<wyniki>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wyniki")]
	public partial class wyniki : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nazwa_użytkownika;
		
		private string _Punktacja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNazwa_użytkownikaChanging(string value);
    partial void OnNazwa_użytkownikaChanged();
    partial void OnPunktacjaChanging(string value);
    partial void OnPunktacjaChanged();
    #endregion
		
		public wyniki()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa_użytkownika", DbType="VarChar(50)")]
		public string Nazwa_użytkownika
		{
			get
			{
				return this._Nazwa_użytkownika;
			}
			set
			{
				if ((this._Nazwa_użytkownika != value))
				{
					this.OnNazwa_użytkownikaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa_użytkownika = value;
					this.SendPropertyChanged("Nazwa_użytkownika");
					this.OnNazwa_użytkownikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Punktacja", DbType="VarChar(50)")]
		public string Punktacja
		{
			get
			{
				return this._Punktacja;
			}
			set
			{
				if ((this._Punktacja != value))
				{
					this.OnPunktacjaChanging(value);
					this.SendPropertyChanging();
					this._Punktacja = value;
					this.SendPropertyChanged("Punktacja");
					this.OnPunktacjaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
