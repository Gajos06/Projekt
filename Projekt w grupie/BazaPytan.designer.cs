#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Projekt_w_grupie
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BazaPytan")]
	public partial class BazaPytanDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBazaPytan(BazaPytan instance);
    partial void UpdateBazaPytan(BazaPytan instance);
    partial void DeleteBazaPytan(BazaPytan instance);
    #endregion
		
		public BazaPytanDataContext() : 
				base(global::Projekt_w_grupie.Properties.Settings.Default.BazaPytanConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BazaPytanDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaPytanDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaPytanDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaPytanDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BazaPytan> BazaPytan
		{
			get
			{
				return this.GetTable<BazaPytan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BazaPytan")]
	public partial class BazaPytan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Question;
		
		private string _OptionA;
		
		private string _OptionB;
		
		private string _OptionC;
		
		private string _OptionD;
		
		private string _Answer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnOptionAChanging(string value);
    partial void OnOptionAChanged();
    partial void OnOptionBChanging(string value);
    partial void OnOptionBChanged();
    partial void OnOptionCChanging(string value);
    partial void OnOptionCChanged();
    partial void OnOptionDChanging(string value);
    partial void OnOptionDChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    #endregion
		
		public BazaPytan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionA", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string OptionA
		{
			get
			{
				return this._OptionA;
			}
			set
			{
				if ((this._OptionA != value))
				{
					this.OnOptionAChanging(value);
					this.SendPropertyChanging();
					this._OptionA = value;
					this.SendPropertyChanged("OptionA");
					this.OnOptionAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionB", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string OptionB
		{
			get
			{
				return this._OptionB;
			}
			set
			{
				if ((this._OptionB != value))
				{
					this.OnOptionBChanging(value);
					this.SendPropertyChanging();
					this._OptionB = value;
					this.SendPropertyChanged("OptionB");
					this.OnOptionBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionC", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string OptionC
		{
			get
			{
				return this._OptionC;
			}
			set
			{
				if ((this._OptionC != value))
				{
					this.OnOptionCChanging(value);
					this.SendPropertyChanging();
					this._OptionC = value;
					this.SendPropertyChanged("OptionC");
					this.OnOptionCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionD", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string OptionD
		{
			get
			{
				return this._OptionD;
			}
			set
			{
				if ((this._OptionD != value))
				{
					this.OnOptionDChanging(value);
					this.SendPropertyChanging();
					this._OptionD = value;
					this.SendPropertyChanged("OptionD");
					this.OnOptionDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
